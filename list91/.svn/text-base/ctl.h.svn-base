#ifndef _CTL_H
#define _CTL_H

#include "global.h"

extern u8 g_sendpkthead[2048];


#define PKT_LEN(x) 				(*(u32*)(x))
#define PKT_CMD(x) 				(*(u16*)(x+6))
#define PKT_PAYLOAD_PARA1(x) 		(*(u32*)(x+14))
#define PKT_PAYLOAD_PARA2(x) 		(*(u32*)(x+18))

#define SET_PKT_LEN(x,len) 			(*(u32*)(x)) = len
#define SET_PKT_VER_MAJ(x,num) 	(*(u8*)(x+4)) = num
#define SET_PKT_VER_MIN(x,num) 	(*(u8*)(x+5)) = num
#define SET_PKT_VER_CMD(x,com) 	(*(u16*)(x+6)) = com
#define SET_PKT_VON_ID(x,id) 		(*(u8*)(x+8)) = id
#define SET_PKT_PRO_ID(x,id) 		(*(u8*)(x+9)) = id
#define SET_PKT_RES(x,num) 		(*(u32*)(x+10)) = num

#define SET_PKT_PARA1(x,num)		(*(u32*)(x+10)) = num

//inline void ctl_getpktinfo(u32 phyindev,u32* dir,u32* innerip, u32* upflow,u32* downflow,u32 size);
inline void ctl_initpktcontent(u8* buf,u32 sip,u32 dip,u16 sport,u16 dport,u32 seq,u32 ack,u32 accid);
inline void ctl_initpkthead(u8* buf);
inline void ctl_setpkthead(u8* buf,u32 len,  u16 cmd);

inline u32 ctl_getpktdir(u32 phyindev);
inline u32 ctl_getinnerip(u32 sip,u32 dip);

inline u32 ctl_getsystime(struct tm** ptm, time_t* currentTime);
void ctl_readsharedmemid(int* shm_id);
inline void ctl_generatetablename(u8* name,u8* post);
inline int ctl_search(void *source, void *target,u32 soc_length, u32 tar_length);

inline void ctl_httpget(u8* buf,u16 buflen,u8** get, u16* getlen);
inline void ctl_httphost(u8* buf,u16 buflen,u8** host,u16* hostlen);
#endif
