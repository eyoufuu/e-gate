#include "policy.h"


u32 pol_init()
{
}
void pol_release()
{
}
void pol_update(u32 polid)
{
	g_policy[polid];
}
u32 pol_getproresult(u32 polid,u32 proid)
{
	u32 ret = g_policy[polid].pro[proid].pass;
	return ret;
}
u32 pol_getwebresult(u32 polid,u32 webid)
{
	u32 ret = g_policy[polid].web[webid].pass;
	return ret;
}
u32 pol_getfiletyperesult(u32 polid,u32 filetypeid)
{
	u32 ret = g_policy[polid].filetype[filetypeid].pass;
	return ret;
}

u32 pol_isweblog(u32 polid,u32 webid)
{
	u32 ret = g_policy[polid].web[webid].log;
	return ret;
}
u32 pol_isfiletypelog(u32 polid,u32 filetypeid)
{
	u32 ret = g_policy[polid].filetype[filetypeid].log;
	return ret;
}
u32 pol_getresult(u32 type,u32 polid,u32 id)
{
	switch(type)
	{
		case POL_PRO:
			return pol_getproresult(polid,id);
		case POL_WEB:
			return pol_getwebresult(polid,id);
		case POL_FILETYPE:
			return pol_getfiletyperesult(polid,id);
		default:
			return 1;
	}	
}
u32 pol_islog(u32 type,u32 polid,u32 id)
{
	switch(type)
	{
		case POL_WEB:
			return pol_isweblog(polid,id);
		case POL_FILETYPE:
			return pol_isfiletypelog(polid,id);
		default:
			return 1;
	}
}
